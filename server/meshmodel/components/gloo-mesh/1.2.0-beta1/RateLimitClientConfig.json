{"kind":"RateLimitClientConfig","apiVersion":"v1beta1","displayName":"Rate Limit Client Config","format":"JSON","metadata":{"genealogy":"","logoURL":"https://layer5.io/company/brand","model":"gloo-mesh","modelDisplayName":"gloo-mesh","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Uncategorized","svgColor":"\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" fill=\"none\"\u003e\n\u003cg xmlns=\"http://www.w3.org/2000/svg\" clip-path=\"url(#clip0_36_80)\"\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M16.4632 7.69351V15.2015L22.9702 11.4346L16.4632 7.69351Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M16.4632 16.7705V24.3157L23.0307 20.5607L16.4632 16.7705Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M15.5274 15.1502V7.75632L9.10194 11.4416L15.5274 15.1502Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M2.63699 24.2878C3.89756 26.3157 5.60178 28.031 7.62134 29.3047V21.4033L2.63699 24.2878Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M15.5274 24.2785V16.8264L9.08579 20.556L15.5274 24.2785Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M8.55965 28.8344L15.0829 25.1049L8.55965 21.3335V28.8344Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M23.4753 28.8742V21.3848L16.9615 25.1096L23.4753 28.8742Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M29.852 23.4194C30.9655 21.341 31.5949 19.0378 31.6935 16.6819L24.9119 20.5651L29.852 23.4194Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M24.4136 19.7691L30.96 16.0256L24.4136 12.2634V19.7691Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M23.4755 10.6455V3.20041L16.9919 6.91827L23.4755 10.6455Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M23.4754 19.7364V12.2239L16.9779 15.986L23.4754 19.7364Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M8.55965 12.2099V19.7784L15.1061 15.9882L8.55965 12.2099Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M15.5274 0.285706C13.1176 0.353534 10.756 0.977397 8.6271 2.10855L15.5274 6.06621V0.285706Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M8.55965 3.1492V10.6734L15.1107 6.91597L8.55965 3.1492Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M7.62134 2.69299C5.60228 3.96735 3.89818 5.6826 2.63699 7.7099L7.62134 10.5873V2.69299Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M23.4335 2.14811C21.2869 0.992986 18.9001 0.355226 16.4632 0.285706V6.14069L23.4335 2.14811Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M0.285713 16.5517C0.367085 18.9754 1.01023 21.3471 2.16447 23.4799L7.21396 20.5559L0.285713 16.5517Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M2.16447 8.51996C1.01384 10.6433 0.370833 13.0043 0.285713 15.4178L7.22097 11.4393L2.16447 8.51996Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M8.61544 29.8822C10.7469 31.0189 13.1128 31.6461 15.5274 31.7143V25.9291L8.61544 29.8822Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M29.3675 7.73539C28.1143 5.71396 26.4208 4.00147 24.4136 2.72543V10.5987L29.3675 7.73539Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M24.4136 29.2791C26.4312 27.994 28.1314 26.2684 29.3863 24.2321L24.4136 21.3591V29.2791Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M31.7143 15.3738C31.6251 12.9835 30.9879 10.6458 29.8518 8.54102L24.8441 11.4325L31.7143 15.3738Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M16.4632 31.7143C18.8725 31.6467 21.2333 31.0229 23.3613 29.8914L16.4632 25.8942V31.7143Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M7.62141 19.711V12.2892L1.17738 15.9838L7.62141 19.711Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003c/g\u003e\n\u003cdefs xmlns=\"http://www.w3.org/2000/svg\"\u003e\n\u003cclipPath xmlns=\"http://www.w3.org/2000/svg\" id=\"clip0_36_80\"\u003e\n\u003crect xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"white\"\u003e\u003c/rect\u003e\n\u003c/clipPath\u003e\n\u003c/defs\u003e\n\u003c/svg\u003e","svgComplete":"","svgWhite":"\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" fill=\"none\"\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M16.405 8.732v6.57l5.694-3.297-5.694-3.273Zm0 7.942v6.602l5.747-3.285-5.747-3.317Z\" fill=\"#fff\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M15.586 15.256v-6.47l-5.622 3.225 5.622 3.245ZM4.307 23.252a13.809 13.809 0 0 0 4.362 4.39v-6.914l-4.362 2.524Zm11.279-.008v-6.52L9.95 19.985l5.636 3.258Z\" fill=\"#fff\" fill-opacity=\".8\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"m9.49 27.23 5.707-3.263-5.707-3.3v6.563Z\" fill=\"#fff\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M22.54 27.265v-6.553l-5.699 3.259 5.7 3.294Zm5.58-4.773a13.697 13.697 0 0 0 1.612-5.895l-5.934 3.397 4.323 2.498Z\" fill=\"#fff\" fill-opacity=\".8\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"m23.362 19.298 5.728-3.276-5.728-3.291v6.567Z\" fill=\"#fff\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M22.541 11.315V4.8l-5.673 3.253 5.673 3.262Zm0 7.955v-6.574l-5.685 3.292 5.685 3.281Z\" fill=\"#fff\" fill-opacity=\".8\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M9.49 12.684v6.622l5.728-3.316-5.728-3.306Z\" fill=\"#fff\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M15.586 2.25a13.69 13.69 0 0 0-6.037 1.595l6.037 3.463V2.25Z\" fill=\"#fff\" fill-opacity=\".8\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M9.49 4.756v6.583l5.732-3.288L9.49 4.756Z\" fill=\"#fff\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M8.669 4.356a13.83 13.83 0 0 0-4.362 4.39l4.362 2.518V4.356Z\" fill=\"#fff\" fill-opacity=\".8\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M22.504 3.88a13.695 13.695 0 0 0-6.099-1.63v5.123l6.1-3.493ZM2.25 16.483c.071 2.12.634 4.196 1.644 6.062l4.418-2.559-6.062-3.503Zm1.644-7.028a13.68 13.68 0 0 0-1.644 6.036l6.068-3.482-4.424-2.554Z\" fill=\"#fff\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M9.539 28.147a13.673 13.673 0 0 0 6.047 1.603v-5.062L9.54 28.147Z\" fill=\"#fff\" fill-opacity=\".8\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M27.697 8.768a13.83 13.83 0 0 0-4.335-4.383v6.889l4.335-2.506ZM23.362 27.62a13.851 13.851 0 0 0 4.351-4.417l-4.351-2.514v6.93Z\" fill=\"#fff\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M29.75 15.452a13.659 13.659 0 0 0-1.63-5.979l-4.381 2.53 6.011 3.45Z\" fill=\"#fff\" fill-opacity=\".8\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M16.405 29.75a13.673 13.673 0 0 0 6.036-1.595l-6.036-3.498v5.093Z\" fill=\"#fff\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M8.669 19.247v-6.494L3.03 15.986l5.639 3.261Z\" fill=\"#fff\" fill-opacity=\".8\"\u003e\u003c/path\u003e\u003c/svg\u003e"},"model":{"name":"gloo-mesh","version":"1.2.0-beta1","displayName":"gloo-mesh","category":{"name":"Uncategorized","metadata":null},"metadata":null},"schema":"{\n \"description\": \"RateLimitClientConfig contains the client configuration for the rate limit Actions that determine how Envoy\\ncomposes the descriptors that are sent to the rate limit server to check whether a request should be rate-limited\",\n \"properties\": {\n  \"rateLimits\": {\n   \"description\": \"The RateLimitClient specifies the ratelimit Actions which the client (Envoy) will use to\\ncompose the descriptors that will be sent to the server to make a rate limiting decision.\",\n   \"oneOf\": [\n    {\n     \"not\": {\n      \"anyOf\": [\n       {\n        \"required\": [\n         \"raw\"\n        ]\n       }\n      ]\n     }\n    },\n    {\n     \"required\": [\n      \"raw\"\n     ]\n    }\n   ],\n   \"properties\": {\n    \"raw\": {\n     \"description\": \"Configure the actions and/or set actions that determine how Envoy composes the descriptors\",\n     \"properties\": {\n      \"rateLimits\": {\n       \"description\": \"Actions specify how the client (Envoy) will compose the descriptors that\\nwill be sent to the server to make a rate limiting decision.\",\n       \"items\": {\n        \"properties\": {\n         \"actions\": {\n          \"items\": {\n           \"oneOf\": [\n            {\n             \"not\": {\n              \"anyOf\": [\n               {\n                \"required\": [\n                 \"sourceCluster\"\n                ]\n               },\n               {\n                \"required\": [\n                 \"destinationCluster\"\n                ]\n               },\n               {\n                \"required\": [\n                 \"requestHeaders\"\n                ]\n               },\n               {\n                \"required\": [\n                 \"remoteAddress\"\n                ]\n               },\n               {\n                \"required\": [\n                 \"genericKey\"\n                ]\n               },\n               {\n                \"required\": [\n                 \"headerValueMatch\"\n                ]\n               },\n               {\n                \"required\": [\n                 \"metadata\"\n                ]\n               }\n              ]\n             }\n            },\n            {\n             \"required\": [\n              \"sourceCluster\"\n             ]\n            },\n            {\n             \"required\": [\n              \"destinationCluster\"\n             ]\n            },\n            {\n             \"required\": [\n              \"requestHeaders\"\n             ]\n            },\n            {\n             \"required\": [\n              \"remoteAddress\"\n             ]\n            },\n            {\n             \"required\": [\n              \"genericKey\"\n             ]\n            },\n            {\n             \"required\": [\n              \"headerValueMatch\"\n             ]\n            },\n            {\n             \"required\": [\n              \"metadata\"\n             ]\n            }\n           ],\n           \"properties\": {\n            \"destinationCluster\": {\n             \"description\": \"Rate limit on destination cluster.\",\n             \"type\": \"object\"\n            },\n            \"genericKey\": {\n             \"description\": \"Rate limit on a generic key.\",\n             \"properties\": {\n              \"descriptorValue\": {\n               \"description\": \"The value to use in the descriptor entry.\",\n               \"type\": \"string\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"headerValueMatch\": {\n             \"description\": \"Rate limit on the existence of request headers.\",\n             \"properties\": {\n              \"descriptorValue\": {\n               \"description\": \"The value to use in the descriptor entry.\",\n               \"type\": \"string\"\n              },\n              \"expectMatch\": {\n               \"description\": \"If set to true, the action will append a descriptor entry when the\\nrequest matches the headers. If set to false, the action will append a\\ndescriptor entry when the request does not match the headers. The\\ndefault value is true.\",\n               \"nullable\": true,\n               \"type\": \"boolean\"\n              },\n              \"headers\": {\n               \"description\": \"Specifies a set of headers that the rate limit action should match\\non. The action will check the request’s headers against all the\\nspecified headers in the config. A match will happen if all the\\nheaders in the config are present in the request with the same values\\n(or based on presence if the value field is not in the config).\",\n               \"items\": {\n                \"oneOf\": [\n                 {\n                  \"not\": {\n                   \"anyOf\": [\n                    {\n                     \"required\": [\n                      \"exactMatch\"\n                     ]\n                    },\n                    {\n                     \"required\": [\n                      \"regexMatch\"\n                     ]\n                    },\n                    {\n                     \"required\": [\n                      \"rangeMatch\"\n                     ]\n                    },\n                    {\n                     \"required\": [\n                      \"presentMatch\"\n                     ]\n                    },\n                    {\n                     \"required\": [\n                      \"prefixMatch\"\n                     ]\n                    },\n                    {\n                     \"required\": [\n                      \"suffixMatch\"\n                     ]\n                    }\n                   ]\n                  }\n                 },\n                 {\n                  \"required\": [\n                   \"exactMatch\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"regexMatch\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"rangeMatch\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"presentMatch\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"prefixMatch\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"suffixMatch\"\n                  ]\n                 }\n                ],\n                \"properties\": {\n                 \"exactMatch\": {\n                  \"description\": \"If specified, header match will be performed based on the value of the header.\",\n                  \"type\": \"string\"\n                 },\n                 \"invertMatch\": {\n                  \"description\": \"If specified, the match result will be inverted before checking. Defaults to false.\\n\\nExamples:\\n\\n* The regex *\\\\d{3}* does not match the value *1234*, so it will match when inverted.\\n* The range [-10,0) will match the value -1, so it will not match when inverted.\",\n                  \"type\": \"boolean\"\n                 },\n                 \"name\": {\n                  \"description\": \"Specifies the name of the header in the request.\",\n                  \"type\": \"string\"\n                 },\n                 \"prefixMatch\": {\n                  \"description\": \"If specified, header match will be performed based on the prefix of the header value.\\nNote: empty prefix is not allowed, please use present_match instead.\\n\\nExamples:\\n\\n* The prefix *abcd* matches the value *abcdxyz*, but not for *abcxyz*.\",\n                  \"type\": \"string\"\n                 },\n                 \"presentMatch\": {\n                  \"description\": \"If specified, header match will be performed based on whether the header is in the\\nrequest.\",\n                  \"type\": \"boolean\"\n                 },\n                 \"rangeMatch\": {\n                  \"description\": \"If specified, header match will be performed based on range.\\nThe rule will match if the request header value is within this range.\\nThe entire request header value must represent an integer in base 10 notation: consisting of\\nan optional plus or minus sign followed by a sequence of digits. The rule will not match if\\nthe header value does not represent an integer. Match will fail for empty values, floating\\npoint numbers or if only a subsequence of the header value is an integer.\\n\\nExamples:\\n\\n* For range [-10,0), route will match for header value -1, but not for 0, \\\"somestring\\\", 10.9,\\n  \\\"-1somestring\\\"\",\n                  \"properties\": {\n                   \"end\": {\n                    \"description\": \"end of the range (exclusive)\",\n                    \"format\": \"int64\",\n                    \"type\": \"integer\"\n                   },\n                   \"start\": {\n                    \"description\": \"start of the range (inclusive)\",\n                    \"format\": \"int64\",\n                    \"type\": \"integer\"\n                   }\n                  },\n                  \"type\": \"object\"\n                 },\n                 \"regexMatch\": {\n                  \"description\": \"If specified, this regex string is a regular expression rule which implies the entire request\\nheader value must match the regex. The rule will not match if only a subsequence of the\\nrequest header value matches the regex. The regex grammar used in the value field is defined\\n`(here)[https://en.cppreference.com/w/cpp/regex/ecmascript]`.\\n\\nExamples:\\n\\n* The regex *\\\\d{3}* matches the value *123*\\n* The regex *\\\\d{3}* does not match the value *1234*\\n* The regex *\\\\d{3}* does not match the value *123.456*\",\n                  \"type\": \"string\"\n                 },\n                 \"suffixMatch\": {\n                  \"description\": \"If specified, header match will be performed based on the suffix of the header value.\\nNote: empty suffix is not allowed, please use present_match instead.\\n\\nExamples:\\n\\n* The suffix *abcd* matches the value *xyzabcd*, but not for *xyzbcd*.\",\n                  \"type\": \"string\"\n                 }\n                },\n                \"type\": \"object\"\n               },\n               \"type\": \"array\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"metadata\": {\n             \"description\": \"Rate limit on metadata.\",\n             \"properties\": {\n              \"defaultValue\": {\n               \"description\": \"An optional value to use if *metadata_key* is empty. If not set and\\nno value is present under the metadata_key then no descriptor is generated.\",\n               \"type\": \"string\"\n              },\n              \"descriptorKey\": {\n               \"description\": \"Required. The key to use in the descriptor entry.\",\n               \"type\": \"string\"\n              },\n              \"metadataKey\": {\n               \"description\": \"Required. Metadata struct that defines the key and path to retrieve the string value. A match will\\nonly happen if the value in the metadata is of type string.\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"Required. The key name of Metadata to retrieve the Struct from the metadata.\\nTypically, it represents a builtin subsystem or custom extension.\",\n                 \"type\": \"string\"\n                },\n                \"path\": {\n                 \"description\": \"Must have at least one element. The path to retrieve the Value from the Struct. It can be a prefix or a full path,\\ne.g. ``[prop, xyz]`` for a struct or ``[prop, foo]`` for a string in the example,\\nwhich depends on the particular scenario.\\n\\nNote: Due to that only the key type segment is supported, the path can not specify a list\\nunless the list is the last segment.\",\n                 \"items\": {\n                  \"oneOf\": [\n                   {\n                    \"not\": {\n                     \"anyOf\": [\n                      {\n                       \"required\": [\n                        \"key\"\n                       ]\n                      }\n                     ]\n                    }\n                   },\n                   {\n                    \"required\": [\n                     \"key\"\n                    ]\n                   }\n                  ],\n                  \"properties\": {\n                   \"key\": {\n                    \"description\": \"Required. If specified, use the key to retrieve the value in a Struct.\",\n                    \"type\": \"string\"\n                   }\n                  },\n                  \"type\": \"object\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"source\": {\n               \"description\": \"Source of metadata\",\n               \"enum\": [\n                \"DYNAMIC\",\n                \"ROUTE_ENTRY\"\n               ],\n               \"type\": \"string\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"remoteAddress\": {\n             \"description\": \"Rate limit on remote address.\",\n             \"type\": \"object\"\n            },\n            \"requestHeaders\": {\n             \"description\": \"Rate limit on request headers.\",\n             \"properties\": {\n              \"descriptorKey\": {\n               \"description\": \"The key to use in the descriptor entry.\",\n               \"type\": \"string\"\n              },\n              \"headerName\": {\n               \"description\": \"The header name to be queried from the request headers. The header’s\\nvalue is used to populate the value of the descriptor entry for the\\ndescriptor_key.\",\n               \"type\": \"string\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"sourceCluster\": {\n             \"description\": \"Rate limit on source cluster.\",\n             \"type\": \"object\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         },\n         \"setActions\": {\n          \"items\": {\n           \"oneOf\": [\n            {\n             \"not\": {\n              \"anyOf\": [\n               {\n                \"required\": [\n                 \"sourceCluster\"\n                ]\n               },\n               {\n                \"required\": [\n                 \"destinationCluster\"\n                ]\n               },\n               {\n                \"required\": [\n                 \"requestHeaders\"\n                ]\n               },\n               {\n                \"required\": [\n                 \"remoteAddress\"\n                ]\n               },\n               {\n                \"required\": [\n                 \"genericKey\"\n                ]\n               },\n               {\n                \"required\": [\n                 \"headerValueMatch\"\n                ]\n               },\n               {\n                \"required\": [\n                 \"metadata\"\n                ]\n               }\n              ]\n             }\n            },\n            {\n             \"required\": [\n              \"sourceCluster\"\n             ]\n            },\n            {\n             \"required\": [\n              \"destinationCluster\"\n             ]\n            },\n            {\n             \"required\": [\n              \"requestHeaders\"\n             ]\n            },\n            {\n             \"required\": [\n              \"remoteAddress\"\n             ]\n            },\n            {\n             \"required\": [\n              \"genericKey\"\n             ]\n            },\n            {\n             \"required\": [\n              \"headerValueMatch\"\n             ]\n            },\n            {\n             \"required\": [\n              \"metadata\"\n             ]\n            }\n           ],\n           \"properties\": {\n            \"destinationCluster\": {\n             \"description\": \"Rate limit on destination cluster.\",\n             \"type\": \"object\"\n            },\n            \"genericKey\": {\n             \"description\": \"Rate limit on a generic key.\",\n             \"properties\": {\n              \"descriptorValue\": {\n               \"description\": \"The value to use in the descriptor entry.\",\n               \"type\": \"string\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"headerValueMatch\": {\n             \"description\": \"Rate limit on the existence of request headers.\",\n             \"properties\": {\n              \"descriptorValue\": {\n               \"description\": \"The value to use in the descriptor entry.\",\n               \"type\": \"string\"\n              },\n              \"expectMatch\": {\n               \"description\": \"If set to true, the action will append a descriptor entry when the\\nrequest matches the headers. If set to false, the action will append a\\ndescriptor entry when the request does not match the headers. The\\ndefault value is true.\",\n               \"nullable\": true,\n               \"type\": \"boolean\"\n              },\n              \"headers\": {\n               \"description\": \"Specifies a set of headers that the rate limit action should match\\non. The action will check the request’s headers against all the\\nspecified headers in the config. A match will happen if all the\\nheaders in the config are present in the request with the same values\\n(or based on presence if the value field is not in the config).\",\n               \"items\": {\n                \"oneOf\": [\n                 {\n                  \"not\": {\n                   \"anyOf\": [\n                    {\n                     \"required\": [\n                      \"exactMatch\"\n                     ]\n                    },\n                    {\n                     \"required\": [\n                      \"regexMatch\"\n                     ]\n                    },\n                    {\n                     \"required\": [\n                      \"rangeMatch\"\n                     ]\n                    },\n                    {\n                     \"required\": [\n                      \"presentMatch\"\n                     ]\n                    },\n                    {\n                     \"required\": [\n                      \"prefixMatch\"\n                     ]\n                    },\n                    {\n                     \"required\": [\n                      \"suffixMatch\"\n                     ]\n                    }\n                   ]\n                  }\n                 },\n                 {\n                  \"required\": [\n                   \"exactMatch\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"regexMatch\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"rangeMatch\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"presentMatch\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"prefixMatch\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"suffixMatch\"\n                  ]\n                 }\n                ],\n                \"properties\": {\n                 \"exactMatch\": {\n                  \"description\": \"If specified, header match will be performed based on the value of the header.\",\n                  \"type\": \"string\"\n                 },\n                 \"invertMatch\": {\n                  \"description\": \"If specified, the match result will be inverted before checking. Defaults to false.\\n\\nExamples:\\n\\n* The regex *\\\\d{3}* does not match the value *1234*, so it will match when inverted.\\n* The range [-10,0) will match the value -1, so it will not match when inverted.\",\n                  \"type\": \"boolean\"\n                 },\n                 \"name\": {\n                  \"description\": \"Specifies the name of the header in the request.\",\n                  \"type\": \"string\"\n                 },\n                 \"prefixMatch\": {\n                  \"description\": \"If specified, header match will be performed based on the prefix of the header value.\\nNote: empty prefix is not allowed, please use present_match instead.\\n\\nExamples:\\n\\n* The prefix *abcd* matches the value *abcdxyz*, but not for *abcxyz*.\",\n                  \"type\": \"string\"\n                 },\n                 \"presentMatch\": {\n                  \"description\": \"If specified, header match will be performed based on whether the header is in the\\nrequest.\",\n                  \"type\": \"boolean\"\n                 },\n                 \"rangeMatch\": {\n                  \"description\": \"If specified, header match will be performed based on range.\\nThe rule will match if the request header value is within this range.\\nThe entire request header value must represent an integer in base 10 notation: consisting of\\nan optional plus or minus sign followed by a sequence of digits. The rule will not match if\\nthe header value does not represent an integer. Match will fail for empty values, floating\\npoint numbers or if only a subsequence of the header value is an integer.\\n\\nExamples:\\n\\n* For range [-10,0), route will match for header value -1, but not for 0, \\\"somestring\\\", 10.9,\\n  \\\"-1somestring\\\"\",\n                  \"properties\": {\n                   \"end\": {\n                    \"description\": \"end of the range (exclusive)\",\n                    \"format\": \"int64\",\n                    \"type\": \"integer\"\n                   },\n                   \"start\": {\n                    \"description\": \"start of the range (inclusive)\",\n                    \"format\": \"int64\",\n                    \"type\": \"integer\"\n                   }\n                  },\n                  \"type\": \"object\"\n                 },\n                 \"regexMatch\": {\n                  \"description\": \"If specified, this regex string is a regular expression rule which implies the entire request\\nheader value must match the regex. The rule will not match if only a subsequence of the\\nrequest header value matches the regex. The regex grammar used in the value field is defined\\n`(here)[https://en.cppreference.com/w/cpp/regex/ecmascript]`.\\n\\nExamples:\\n\\n* The regex *\\\\d{3}* matches the value *123*\\n* The regex *\\\\d{3}* does not match the value *1234*\\n* The regex *\\\\d{3}* does not match the value *123.456*\",\n                  \"type\": \"string\"\n                 },\n                 \"suffixMatch\": {\n                  \"description\": \"If specified, header match will be performed based on the suffix of the header value.\\nNote: empty suffix is not allowed, please use present_match instead.\\n\\nExamples:\\n\\n* The suffix *abcd* matches the value *xyzabcd*, but not for *xyzbcd*.\",\n                  \"type\": \"string\"\n                 }\n                },\n                \"type\": \"object\"\n               },\n               \"type\": \"array\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"metadata\": {\n             \"description\": \"Rate limit on metadata.\",\n             \"properties\": {\n              \"defaultValue\": {\n               \"description\": \"An optional value to use if *metadata_key* is empty. If not set and\\nno value is present under the metadata_key then no descriptor is generated.\",\n               \"type\": \"string\"\n              },\n              \"descriptorKey\": {\n               \"description\": \"Required. The key to use in the descriptor entry.\",\n               \"type\": \"string\"\n              },\n              \"metadataKey\": {\n               \"description\": \"Required. Metadata struct that defines the key and path to retrieve the string value. A match will\\nonly happen if the value in the metadata is of type string.\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"Required. The key name of Metadata to retrieve the Struct from the metadata.\\nTypically, it represents a builtin subsystem or custom extension.\",\n                 \"type\": \"string\"\n                },\n                \"path\": {\n                 \"description\": \"Must have at least one element. The path to retrieve the Value from the Struct. It can be a prefix or a full path,\\ne.g. ``[prop, xyz]`` for a struct or ``[prop, foo]`` for a string in the example,\\nwhich depends on the particular scenario.\\n\\nNote: Due to that only the key type segment is supported, the path can not specify a list\\nunless the list is the last segment.\",\n                 \"items\": {\n                  \"oneOf\": [\n                   {\n                    \"not\": {\n                     \"anyOf\": [\n                      {\n                       \"required\": [\n                        \"key\"\n                       ]\n                      }\n                     ]\n                    }\n                   },\n                   {\n                    \"required\": [\n                     \"key\"\n                    ]\n                   }\n                  ],\n                  \"properties\": {\n                   \"key\": {\n                    \"description\": \"Required. If specified, use the key to retrieve the value in a Struct.\",\n                    \"type\": \"string\"\n                   }\n                  },\n                  \"type\": \"object\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"source\": {\n               \"description\": \"Source of metadata\",\n               \"enum\": [\n                \"DYNAMIC\",\n                \"ROUTE_ENTRY\"\n               ],\n               \"type\": \"string\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"remoteAddress\": {\n             \"description\": \"Rate limit on remote address.\",\n             \"type\": \"object\"\n            },\n            \"requestHeaders\": {\n             \"description\": \"Rate limit on request headers.\",\n             \"properties\": {\n              \"descriptorKey\": {\n               \"description\": \"The key to use in the descriptor entry.\",\n               \"type\": \"string\"\n              },\n              \"headerName\": {\n               \"description\": \"The header name to be queried from the request headers. The header’s\\nvalue is used to populate the value of the descriptor entry for the\\ndescriptor_key.\",\n               \"type\": \"string\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"sourceCluster\": {\n             \"description\": \"Rate limit on source cluster.\",\n             \"type\": \"object\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Rate Limit Client Config\",\n \"type\": \"object\"\n}"}