{"kind":"VaultPolicyBinding","apiVersion":"v1alpha1","displayName":"Vault Policy Binding","format":"JSON","metadata":{"genealogy":"","logoURL":"https://layer5.io/company/brand","model":"kubevault-crds","modelDisplayName":"kubevault-crds","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Uncategorized","svgColor":"\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" fill=\"none\"\u003e\n\u003cg xmlns=\"http://www.w3.org/2000/svg\" clip-path=\"url(#clip0_36_80)\"\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M16.4632 7.69351V15.2015L22.9702 11.4346L16.4632 7.69351Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M16.4632 16.7705V24.3157L23.0307 20.5607L16.4632 16.7705Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M15.5274 15.1502V7.75632L9.10194 11.4416L15.5274 15.1502Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M2.63699 24.2878C3.89756 26.3157 5.60178 28.031 7.62134 29.3047V21.4033L2.63699 24.2878Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M15.5274 24.2785V16.8264L9.08579 20.556L15.5274 24.2785Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M8.55965 28.8344L15.0829 25.1049L8.55965 21.3335V28.8344Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M23.4753 28.8742V21.3848L16.9615 25.1096L23.4753 28.8742Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M29.852 23.4194C30.9655 21.341 31.5949 19.0378 31.6935 16.6819L24.9119 20.5651L29.852 23.4194Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M24.4136 19.7691L30.96 16.0256L24.4136 12.2634V19.7691Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M23.4755 10.6455V3.20041L16.9919 6.91827L23.4755 10.6455Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M23.4754 19.7364V12.2239L16.9779 15.986L23.4754 19.7364Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M8.55965 12.2099V19.7784L15.1061 15.9882L8.55965 12.2099Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M15.5274 0.285706C13.1176 0.353534 10.756 0.977397 8.6271 2.10855L15.5274 6.06621V0.285706Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M8.55965 3.1492V10.6734L15.1107 6.91597L8.55965 3.1492Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M7.62134 2.69299C5.60228 3.96735 3.89818 5.6826 2.63699 7.7099L7.62134 10.5873V2.69299Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M23.4335 2.14811C21.2869 0.992986 18.9001 0.355226 16.4632 0.285706V6.14069L23.4335 2.14811Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M0.285713 16.5517C0.367085 18.9754 1.01023 21.3471 2.16447 23.4799L7.21396 20.5559L0.285713 16.5517Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M2.16447 8.51996C1.01384 10.6433 0.370833 13.0043 0.285713 15.4178L7.22097 11.4393L2.16447 8.51996Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M8.61544 29.8822C10.7469 31.0189 13.1128 31.6461 15.5274 31.7143V25.9291L8.61544 29.8822Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M29.3675 7.73539C28.1143 5.71396 26.4208 4.00147 24.4136 2.72543V10.5987L29.3675 7.73539Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M24.4136 29.2791C26.4312 27.994 28.1314 26.2684 29.3863 24.2321L24.4136 21.3591V29.2791Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M31.7143 15.3738C31.6251 12.9835 30.9879 10.6458 29.8518 8.54102L24.8441 11.4325L31.7143 15.3738Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M16.4632 31.7143C18.8725 31.6467 21.2333 31.0229 23.3613 29.8914L16.4632 25.8942V31.7143Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M7.62141 19.711V12.2892L1.17738 15.9838L7.62141 19.711Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003c/g\u003e\n\u003cdefs xmlns=\"http://www.w3.org/2000/svg\"\u003e\n\u003cclipPath xmlns=\"http://www.w3.org/2000/svg\" id=\"clip0_36_80\"\u003e\n\u003crect xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"white\"\u003e\u003c/rect\u003e\n\u003c/clipPath\u003e\n\u003c/defs\u003e\n\u003c/svg\u003e","svgComplete":"","svgWhite":"\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" fill=\"none\"\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M16.405 8.732v6.57l5.694-3.297-5.694-3.273Zm0 7.942v6.602l5.747-3.285-5.747-3.317Z\" fill=\"#fff\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M15.586 15.256v-6.47l-5.622 3.225 5.622 3.245ZM4.307 23.252a13.809 13.809 0 0 0 4.362 4.39v-6.914l-4.362 2.524Zm11.279-.008v-6.52L9.95 19.985l5.636 3.258Z\" fill=\"#fff\" fill-opacity=\".8\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"m9.49 27.23 5.707-3.263-5.707-3.3v6.563Z\" fill=\"#fff\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M22.54 27.265v-6.553l-5.699 3.259 5.7 3.294Zm5.58-4.773a13.697 13.697 0 0 0 1.612-5.895l-5.934 3.397 4.323 2.498Z\" fill=\"#fff\" fill-opacity=\".8\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"m23.362 19.298 5.728-3.276-5.728-3.291v6.567Z\" fill=\"#fff\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M22.541 11.315V4.8l-5.673 3.253 5.673 3.262Zm0 7.955v-6.574l-5.685 3.292 5.685 3.281Z\" fill=\"#fff\" fill-opacity=\".8\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M9.49 12.684v6.622l5.728-3.316-5.728-3.306Z\" fill=\"#fff\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M15.586 2.25a13.69 13.69 0 0 0-6.037 1.595l6.037 3.463V2.25Z\" fill=\"#fff\" fill-opacity=\".8\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M9.49 4.756v6.583l5.732-3.288L9.49 4.756Z\" fill=\"#fff\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M8.669 4.356a13.83 13.83 0 0 0-4.362 4.39l4.362 2.518V4.356Z\" fill=\"#fff\" fill-opacity=\".8\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M22.504 3.88a13.695 13.695 0 0 0-6.099-1.63v5.123l6.1-3.493ZM2.25 16.483c.071 2.12.634 4.196 1.644 6.062l4.418-2.559-6.062-3.503Zm1.644-7.028a13.68 13.68 0 0 0-1.644 6.036l6.068-3.482-4.424-2.554Z\" fill=\"#fff\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M9.539 28.147a13.673 13.673 0 0 0 6.047 1.603v-5.062L9.54 28.147Z\" fill=\"#fff\" fill-opacity=\".8\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M27.697 8.768a13.83 13.83 0 0 0-4.335-4.383v6.889l4.335-2.506ZM23.362 27.62a13.851 13.851 0 0 0 4.351-4.417l-4.351-2.514v6.93Z\" fill=\"#fff\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M29.75 15.452a13.659 13.659 0 0 0-1.63-5.979l-4.381 2.53 6.011 3.45Z\" fill=\"#fff\" fill-opacity=\".8\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M16.405 29.75a13.673 13.673 0 0 0 6.036-1.595l-6.036-3.498v5.093Z\" fill=\"#fff\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M8.669 19.247v-6.494L3.03 15.986l5.639 3.261Z\" fill=\"#fff\" fill-opacity=\".8\"\u003e\u003c/path\u003e\u003c/svg\u003e"},"model":{"name":"kubevault-crds","version":"2023.3.3","displayName":"kubevault-crds","category":{"name":"Uncategorized","metadata":null},"metadata":null},"schema":"{\n \"description\": \"links: https://www.vaultproject.io/api/auth/kubernetes/index.html#parameters-1\",\n \"properties\": {\n  \"policies\": {\n   \"description\": \"Policies is a list of Vault policy identifiers.\",\n   \"items\": {\n    \"properties\": {\n     \"name\": {\n      \"description\": \"Name is a Vault server policy name. This name should be returned by `vault read sys/policy` command. More info: https://www.vaultproject.io/docs/concepts/policies.html#listing-policies\",\n      \"type\": \"string\"\n     },\n     \"ref\": {\n      \"description\": \"Ref is name of a VaultPolicy crd object. Actual vault policy name is spec.vaultRoleName field. More info: https://www.vaultproject.io/docs/concepts/policies.html#listing-policies\",\n      \"type\": \"string\"\n     }\n    },\n    \"type\": \"object\"\n   },\n   \"type\": \"array\"\n  },\n  \"subjectRef\": {\n   \"description\": \"SubjectRef refers to Vault users who will be granted policies.\",\n   \"properties\": {\n    \"appRole\": {\n     \"description\": \"More info: https://www.vaultproject.io/docs/auth/approle#configuration\",\n     \"properties\": {\n      \"bindSecretID\": {\n       \"description\": \"Require secret_id to be presented when logging in using this AppRole.\",\n       \"type\": \"boolean\"\n      },\n      \"enableLocalSecretIds\": {\n       \"description\": \"If set, the secret IDs generated using this role will be cluster local. This can only be set during role creation and once set, it can't be reset later.\",\n       \"type\": \"boolean\"\n      },\n      \"path\": {\n       \"description\": \"Specifies the path where approle auth is enabled default : approle\",\n       \"type\": \"string\"\n      },\n      \"roleName\": {\n       \"description\": \"RoleName is the Name of the AppRole This defaults to following format: k8s.${cluster}.${metadata.namespace}.${metadata.name}\",\n       \"type\": \"string\"\n      },\n      \"secretIdBoundCidrs\": {\n       \"description\": \"List of CIDR blocks; if set, specifies blocks of IP addresses which can perform the login operation.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"secretIdNumUses\": {\n       \"description\": \"Number of times any particular SecretID can be used to fetch a token from this AppRole, after which the SecretID will expire. A value of zero will allow unlimited uses.\",\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"secretIdTTL\": {\n       \"description\": \"Duration in either an integer number of seconds (3600) or an integer time unit (60m) after which any SecretID expires.\",\n       \"type\": \"string\"\n      },\n      \"tokenBoundCidrs\": {\n       \"description\": \"List of CIDR blocks; if set, specifies blocks of IP addresses which can authenticate successfully, and ties the resulting token to these blocks as well.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"tokenExplicitMaxTTL\": {\n       \"description\": \"If set, will encode an explicit max TTL onto the token. This is a hard cap even if token_ttl and token_max_ttl would otherwise allow a renewal.\",\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"tokenMaxTTL\": {\n       \"description\": \"The maximum lifetime for generated tokens. This current value of this will be referenced at renewal time.\",\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"tokenNoDefaultPolicy\": {\n       \"description\": \"If set, the default policy will not be set on generated tokens; otherwise it will be added to the policies set in token_policies.\",\n       \"type\": \"boolean\"\n      },\n      \"tokenNumUses\": {\n       \"description\": \"The maximum number of times a generated token may be used (within its lifetime); 0 means unlimited.\",\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"tokenPeriod\": {\n       \"description\": \"The period, if any, to set on the token.\",\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"tokenPolicies\": {\n       \"description\": \"List of policies to encode onto generated tokens. Depending on the auth method, this list may be supplemented by user/group/other values.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"tokenTTL\": {\n       \"description\": \"The incremental lifetime for generated tokens. This current value of this will be referenced at renewal time.\",\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"tokenType\": {\n       \"description\": \"The type of token that should be generated. Can be service, batch, or default to use the mount's tuned default (which unless changed will be service tokens). For token store roles, there are two additional possibilities: default-service and default-batch which specify the type to return unless the client requests a different type at generation time.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"bindSecretID\"\n     ],\n     \"type\": \"object\"\n    },\n    \"jwt\": {\n     \"description\": \"More info: https://www.vaultproject.io/api-docs/auth/jwt#configure\",\n     \"properties\": {\n      \"allowedRedirectUris\": {\n       \"description\": \"The list of allowed values for redirect_uri during OIDC logins.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"boundAudiences\": {\n       \"description\": \"List of aud claims to match against. Any match is sufficient. Required for \\\"jwt\\\" roles, optional for \\\"oidc\\\" roles.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"boundClaims\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"If set, a map of claims/values to match against. The expected value may be a single string or a list of strings. The interpretation of the bound claim values is configured with bound_claims_type.\",\n       \"type\": \"object\"\n      },\n      \"boundClaimsType\": {\n       \"description\": \"Configures the interpretation of the bound_claims values. If \\\"string\\\" (the default), the values will treated as string literals and must match exactly. If set to \\\"glob\\\", the values will be interpreted as globs, with * matching any number of characters.\",\n       \"type\": \"string\"\n      },\n      \"boundSubject\": {\n       \"description\": \"If set, requires that the sub claim matches this value.\",\n       \"type\": \"string\"\n      },\n      \"claimMappings\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"If set, a map of claims (keys) to be copied to specified metadata fields (values).\",\n       \"type\": \"object\"\n      },\n      \"groupClaim\": {\n       \"description\": \"The claim to use to uniquely identify the set of groups to which the user belongs; this will be used as the names for the Identity group aliases created due to a successful login. The claim value must be a list of strings.\",\n       \"type\": \"string\"\n      },\n      \"name\": {\n       \"description\": \"Name of the role. This defaults to following format: k8s.${cluster}.${metadata.namespace}.${metadata.name}\",\n       \"type\": \"string\"\n      },\n      \"oidcScopes\": {\n       \"description\": \"If set, a list of OIDC scopes to be used with an OIDC role. The standard scope \\\"openid\\\" is automatically included and need not be specified.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"path\": {\n       \"description\": \"Specifies the path where jwt/oidc auth is enabled\",\n       \"type\": \"string\"\n      },\n      \"tokenBoundCidrs\": {\n       \"description\": \"List of CIDR blocks; if set, specifies blocks of IP addresses which can authenticate successfully, and ties the resulting token to these blocks as well.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"tokenExplicitMaxTTL\": {\n       \"description\": \"If set, will encode an explicit max TTL onto the token. This is a hard cap even if token_ttl and token_max_ttl would otherwise allow a renewal.\",\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"tokenMaxTTL\": {\n       \"description\": \"The maximum lifetime for generated tokens. This current value of this will be referenced at renewal time.\",\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"tokenNoDefaultPolicy\": {\n       \"description\": \"If set, the default policy will not be set on generated tokens; otherwise it will be added to the policies set in token_policies.\",\n       \"type\": \"boolean\"\n      },\n      \"tokenNumUses\": {\n       \"description\": \"The maximum number of times a generated token may be used (within its lifetime); 0 means unlimited.\",\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"tokenPeriod\": {\n       \"description\": \"The period, if any, to set on the token.\",\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"tokenPolicies\": {\n       \"description\": \"List of policies to encode onto generated tokens. Depending on the auth method, this list may be supplemented by user/group/other values.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"tokenTTL\": {\n       \"description\": \"The incremental lifetime for generated tokens. This current value of this will be referenced at renewal time.\",\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"tokenType\": {\n       \"description\": \"The type of token that should be generated. Can be service, batch, or default to use the mount's tuned default (which unless changed will be service tokens). For token store roles, there are two additional possibilities: default-service and default-batch which specify the type to return unless the client requests a different type at generation time.\",\n       \"type\": \"string\"\n      },\n      \"userClaim\": {\n       \"description\": \"The claim to use to uniquely identify the user; this will be used as the name for the Identity entity alias created due to a successful login. The claim value must be a string.\",\n       \"type\": \"string\"\n      },\n      \"verboseOidcLogging\": {\n       \"type\": \"boolean\"\n      }\n     },\n     \"required\": [\n      \"allowedRedirectUris\",\n      \"path\",\n      \"userClaim\"\n     ],\n     \"type\": \"object\"\n    },\n    \"kubernetes\": {\n     \"description\": \"Kubernetes refers to Vault users who are authenticated via Kubernetes auth method More info: https://www.vaultproject.io/docs/auth/kubernetes.html#configuration\",\n     \"properties\": {\n      \"maxTTL\": {\n       \"description\": \"Specifies the maximum allowed lifetime of tokens issued in seconds using this role.\",\n       \"type\": \"string\"\n      },\n      \"name\": {\n       \"description\": \"Name of the role\",\n       \"type\": \"string\"\n      },\n      \"path\": {\n       \"description\": \"Specifies the path where kubernetes auth is enabled default : kubernetes\",\n       \"type\": \"string\"\n      },\n      \"period\": {\n       \"description\": \"If set, indicates that the token generated using this role should never expire. The token should be renewed within the duration specified by this value. At each renewal, the token's TTL will be set to the value of this parameter.\",\n       \"type\": \"string\"\n      },\n      \"serviceAccountNames\": {\n       \"description\": \"Specifies the names of the service account to bind with policy\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"serviceAccountNamespaces\": {\n       \"description\": \"Specifies the namespaces of the service account\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"ttl\": {\n       \"description\": \"Specifies the TTL period of tokens issued using this role in seconds.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"serviceAccountNames\",\n      \"serviceAccountNamespaces\"\n     ],\n     \"type\": \"object\"\n    },\n    \"ldapGroup\": {\n     \"description\": \"More info: https://www.vaultproject.io/api-docs/auth/ldap#configure-ldap\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"The name of the LDAP group\",\n       \"type\": \"string\"\n      },\n      \"path\": {\n       \"description\": \"Specifies the path where ldap groups auth is enabled default : ldap/groups\",\n       \"type\": \"string\"\n      },\n      \"policies\": {\n       \"description\": \"List of policies to encode onto generated tokens. Depending on the auth method, this list may be supplemented by user/group/other values.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"required\": [\n      \"name\"\n     ],\n     \"type\": \"object\"\n    },\n    \"ldapUser\": {\n     \"description\": \"More info: https://www.vaultproject.io/api-docs/auth/ldap#create-update-ldap-user\",\n     \"properties\": {\n      \"groups\": {\n       \"description\": \"List of groups associated to the user.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"path\": {\n       \"description\": \"Specifies the path where ldap groups auth is enabled default : ldap/users\",\n       \"type\": \"string\"\n      },\n      \"policies\": {\n       \"description\": \"List of policies to encode onto generated tokens. Depending on the auth method, this list may be supplemented by user/group/other values.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"username\": {\n       \"description\": \"The username of the LDAP user\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"username\"\n     ],\n     \"type\": \"object\"\n    },\n    \"oidc\": {\n     \"description\": \"More info: https://www.vaultproject.io/api-docs/auth/jwt#create-role\",\n     \"properties\": {\n      \"allowedRedirectUris\": {\n       \"description\": \"The list of allowed values for redirect_uri during OIDC logins.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"boundAudiences\": {\n       \"description\": \"List of aud claims to match against. Any match is sufficient. Required for \\\"jwt\\\" roles, optional for \\\"oidc\\\" roles.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"boundClaims\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"If set, a map of claims/values to match against. The expected value may be a single string or a list of strings. The interpretation of the bound claim values is configured with bound_claims_type.\",\n       \"type\": \"object\"\n      },\n      \"boundClaimsType\": {\n       \"description\": \"Configures the interpretation of the bound_claims values. If \\\"string\\\" (the default), the values will treated as string literals and must match exactly. If set to \\\"glob\\\", the values will be interpreted as globs, with * matching any number of characters.\",\n       \"type\": \"string\"\n      },\n      \"boundSubject\": {\n       \"description\": \"If set, requires that the sub claim matches this value.\",\n       \"type\": \"string\"\n      },\n      \"claimMappings\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"If set, a map of claims (keys) to be copied to specified metadata fields (values).\",\n       \"type\": \"object\"\n      },\n      \"groupClaim\": {\n       \"description\": \"The claim to use to uniquely identify the set of groups to which the user belongs; this will be used as the names for the Identity group aliases created due to a successful login. The claim value must be a list of strings.\",\n       \"type\": \"string\"\n      },\n      \"name\": {\n       \"description\": \"Name of the role. This defaults to following format: k8s.${cluster}.${metadata.namespace}.${metadata.name}\",\n       \"type\": \"string\"\n      },\n      \"oidcScopes\": {\n       \"description\": \"If set, a list of OIDC scopes to be used with an OIDC role. The standard scope \\\"openid\\\" is automatically included and need not be specified.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"path\": {\n       \"description\": \"Specifies the path where jwt/oidc auth is enabled\",\n       \"type\": \"string\"\n      },\n      \"tokenBoundCidrs\": {\n       \"description\": \"List of CIDR blocks; if set, specifies blocks of IP addresses which can authenticate successfully, and ties the resulting token to these blocks as well.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"tokenExplicitMaxTTL\": {\n       \"description\": \"If set, will encode an explicit max TTL onto the token. This is a hard cap even if token_ttl and token_max_ttl would otherwise allow a renewal.\",\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"tokenMaxTTL\": {\n       \"description\": \"The maximum lifetime for generated tokens. This current value of this will be referenced at renewal time.\",\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"tokenNoDefaultPolicy\": {\n       \"description\": \"If set, the default policy will not be set on generated tokens; otherwise it will be added to the policies set in token_policies.\",\n       \"type\": \"boolean\"\n      },\n      \"tokenNumUses\": {\n       \"description\": \"The maximum number of times a generated token may be used (within its lifetime); 0 means unlimited.\",\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"tokenPeriod\": {\n       \"description\": \"The period, if any, to set on the token.\",\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"tokenPolicies\": {\n       \"description\": \"List of policies to encode onto generated tokens. Depending on the auth method, this list may be supplemented by user/group/other values.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"tokenTTL\": {\n       \"description\": \"The incremental lifetime for generated tokens. This current value of this will be referenced at renewal time.\",\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"tokenType\": {\n       \"description\": \"The type of token that should be generated. Can be service, batch, or default to use the mount's tuned default (which unless changed will be service tokens). For token store roles, there are two additional possibilities: default-service and default-batch which specify the type to return unless the client requests a different type at generation time.\",\n       \"type\": \"string\"\n      },\n      \"userClaim\": {\n       \"description\": \"The claim to use to uniquely identify the user; this will be used as the name for the Identity entity alias created due to a successful login. The claim value must be a string.\",\n       \"type\": \"string\"\n      },\n      \"verboseOidcLogging\": {\n       \"type\": \"boolean\"\n      }\n     },\n     \"required\": [\n      \"allowedRedirectUris\",\n      \"path\",\n      \"userClaim\"\n     ],\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"vaultRef\": {\n   \"description\": \"VaultRef is the name of a AppBinding referencing to a Vault Server\",\n   \"properties\": {\n    \"name\": {\n     \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\",\n   \"x-kubernetes-map-type\": \"atomic\"\n  },\n  \"vaultRoleName\": {\n   \"description\": \"VaultRoleName is the role name which will be bound of the policies This defaults to following format: k8s.${cluster}.${metadata.namespace}.${metadata.name} xref: https://www.vaultproject.io/api/auth/kubernetes/index.html#create-role\",\n   \"type\": \"string\"\n  }\n },\n \"required\": [\n  \"policies\",\n  \"subjectRef\",\n  \"vaultRef\"\n ],\n \"title\": \"Vault Policy Binding\",\n \"type\": \"object\"\n}"}